#!/usr/local/bin/perl
use strict;
use warnings;
use File::Copy;
use File::Path 'make_path';
use feature 'say';

sub setgitcfg { say 'Something wrong with changing gitconfig' if system 'git config --global url.git://anongit.kde.org/.insteadOf "kde:"' }

say "The directory to act as Emerge root: [$ENV{'HOME'}/kderoot]";
chomp (my $path = <>);
$path = $ENV{'HOME'} if ! $path;
$path .= '/kderoot';
make_path $path;
chdir $path;

die 'git clone error' if system 'git clone git://anongit.kde.org/emerge.git';
chdir 'emerge';
say `git checkout unix3`;
chdir '..';
mkdir 'etc' ;

while(1) {
    say 'Select BuildType (Release/Debug/MinSizeRel/RelWithDebInfo): [RelWithDebInfo]';
    chomp (my $type = <>);
    if (! $type or $type eq 'RelWithDebInfo') { copy 'emerge/kdesettings.fbsd', 'etc/kdesettings.ini' or die "copy:$!"; last } 
    if ($type =~ /^(?:Release|Debug|MinSizeRel)$/) {
        open my $ini, 'emerge/kdesettings.fbsd';
        open my $finini, '>etc/kdesettings.ini';
        while(<$ini>) {
            s/(=\s)RelWithDebInfo/$1$type/;
            print $finini $_
        }
        last
    }
}

chomp (my $out = `git config --global --get url.git://anongit.kde.org/.insteadOf`);
if (! $out) {
    setgitcfg
} else {
    exit 0 if $out eq 'kde:';
    say "The insteadOf parameter of your gitconfig is \"$out\" but it should be \"kde:\"\nSet it to \"kde:\"? [yes]";
    chomp (my $set = <>);
    setgitcfg if ! $set or $set =~ /^(?:yes|y)$/i
}
